// https://leetcode.com/problems/3sum-closest/submissions/

class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
        int n=nums.size();
        int mini = INT_MAX;
        int res;
        sort(nums.begin(),nums.end());

        for(int i=0;i<n-2;i++)
        {
            if(i>0 && nums[i]==nums[i-1])
                continue;
            
            int l = i+1;
            int r = n-1;
            // cout << l << r << endl;
            while(l<r)
            {
                int sum = nums[i]+nums[l]+nums[r];
                // cout << nums[i] << i << nums[l] << nums[r] << sum << endl;
                int diff = abs(target-sum);
                // cout << i << l << r << " " << diff << " " << sum << endl;
                
                if(diff < mini)
                {
                    res = sum;
                    mini = diff;
                }
                else if(sum>target)
                    r--;
                else 
                    l++;
                
                // cout << l << r << endl;
            }
        }
        return res;
    }
};
